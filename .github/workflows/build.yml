name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js version 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies using yarn
      - name: Install dependencies
        run: yarn install

      # Step 4: Create a temporary ESLint configuration file
      - name: Create temporary ESLint config
        run: |
          echo "export default [{ files: ['**/*.js'], languageOptions: { sourceType: 'module' }, rules: {} }];" > eslint.config.js

      # Step 5: Run lint using the temporary ESLint config
      - name: Run lint
        run: yarn eslint .

      # Step 6: Remove the temporary ESLint configuration
      - name: Cleanup ESLint config
        run: rm eslint.config.js

      # Step 7: Start the server in the background
      - name: Start server
        run: |
          nohup yarn start &   # Start the server in the background
          sleep 5             # Wait for a few seconds to allow the server to start

      # Step 8: Run tests using yarn
      - name: Run tests
        run: yarn test

      # Step 9: Set up QEMU (for multi-platform builds)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 10: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 11: Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 12: Build the Docker image using Docker Buildx
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/webapp:latest
          push: true  # Set to true to push the image to Docker Hub
